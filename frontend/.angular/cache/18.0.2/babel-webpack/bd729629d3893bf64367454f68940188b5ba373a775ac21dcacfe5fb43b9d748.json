{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Optional, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport * as i1 from 'primeng/api';\nlet Ripple = /*#__PURE__*/(() => {\n  class Ripple {\n    constructor(el, zone, config) {\n      this.el = el;\n      this.zone = zone;\n      this.config = config;\n    }\n    ngAfterViewInit() {\n      if (this.config && this.config.ripple) {\n        this.zone.runOutsideAngular(() => {\n          this.create();\n          this.mouseDownListener = this.onMouseDown.bind(this);\n          this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n        });\n      }\n    }\n    onMouseDown(event) {\n      let ink = this.getInk();\n      if (!ink || getComputedStyle(ink, null).display === 'none') {\n        return;\n      }\n      DomHandler.removeClass(ink, 'p-ink-active');\n      if (!DomHandler.getHeight(ink) && !DomHandler.getWidth(ink)) {\n        let d = Math.max(DomHandler.getOuterWidth(this.el.nativeElement), DomHandler.getOuterHeight(this.el.nativeElement));\n        ink.style.height = d + 'px';\n        ink.style.width = d + 'px';\n      }\n      let offset = DomHandler.getOffset(this.el.nativeElement);\n      let x = event.pageX - offset.left + document.body.scrollTop - DomHandler.getWidth(ink) / 2;\n      let y = event.pageY - offset.top + document.body.scrollLeft - DomHandler.getHeight(ink) / 2;\n      ink.style.top = y + 'px';\n      ink.style.left = x + 'px';\n      DomHandler.addClass(ink, 'p-ink-active');\n    }\n    getInk() {\n      for (let i = 0; i < this.el.nativeElement.children.length; i++) {\n        if (this.el.nativeElement.children[i].className.indexOf('p-ink') !== -1) {\n          return this.el.nativeElement.children[i];\n        }\n      }\n      return null;\n    }\n    resetInk() {\n      let ink = this.getInk();\n      if (ink) {\n        DomHandler.removeClass(ink, 'p-ink-active');\n      }\n    }\n    onAnimationEnd(event) {\n      DomHandler.removeClass(event.currentTarget, 'p-ink-active');\n    }\n    create() {\n      let ink = document.createElement('span');\n      ink.className = 'p-ink';\n      this.el.nativeElement.appendChild(ink);\n      this.animationListener = this.onAnimationEnd.bind(this);\n      ink.addEventListener('animationend', this.animationListener);\n    }\n    remove() {\n      let ink = this.getInk();\n      if (ink) {\n        this.el.nativeElement.removeEventListener('mousedown', this.mouseDownListener);\n        ink.removeEventListener('animationend', this.animationListener);\n        DomHandler.removeElement(ink);\n      }\n    }\n    ngOnDestroy() {\n      if (this.config && this.config.ripple) {\n        this.remove();\n      }\n    }\n  }\n  Ripple.ɵfac = function Ripple_Factory(t) {\n    return new (t || Ripple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.PrimeNGConfig, 8));\n  };\n  Ripple.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: Ripple,\n    selectors: [[\"\", \"pRipple\", \"\"]],\n    hostAttrs: [1, \"p-ripple\", \"p-element\"]\n  });\n  return Ripple;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet RippleModule = /*#__PURE__*/(() => {\n  class RippleModule {}\n  RippleModule.ɵfac = function RippleModule_Factory(t) {\n    return new (t || RippleModule)();\n  };\n  RippleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: RippleModule\n  });\n  RippleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return RippleModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ripple, RippleModule };\n//# sourceMappingURL=primeng-ripple.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}