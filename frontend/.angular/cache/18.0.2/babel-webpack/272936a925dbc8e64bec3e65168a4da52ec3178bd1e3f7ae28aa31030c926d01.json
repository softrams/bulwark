{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssessmentFormComponent = void 0;\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"../app.service\");\nconst i2 = require(\"@angular/forms\");\nconst i3 = require(\"@angular/router\");\nconst i4 = require(\"../alert/alert.service\");\nconst i5 = require(\"@angular/common\");\nconst i6 = require(\"@ng-select/ng-select\");\nfunction AssessmentFormComponent_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵlistener(\"click\", function AssessmentFormComponent_ng_template_27_Template_span_click_0_listener() {\n      const ctx_r1 = i0.ɵɵrestoreView(_r1);\n      const item_r3 = ctx_r1.item;\n      const clear_r4 = ctx_r1.clear;\n      return i0.ɵɵresetView(clear_r4(item_r3));\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.item;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r3.firstName, \" \", item_r3.lastName, \" \");\n  }\n}\nfunction AssessmentFormComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.item;\n    i0.ɵɵtextInterpolate2(\" \", item_r5.firstName, \" \", item_r5.lastName, \" \");\n  }\n}\nfunction AssessmentFormComponent_button_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r5.assessmentForm.valid);\n  }\n}\nlet AssessmentFormComponent = /*#__PURE__*/(() => {\n  class AssessmentFormComponent {\n    constructor(appService, fb, route, activatedRoute, alertService) {\n      this.appService = appService;\n      this.fb = fb;\n      this.route = route;\n      this.activatedRoute = activatedRoute;\n      this.alertService = alertService;\n      this.testers = [];\n      this.createForm();\n    }\n    ngOnInit() {\n      this.activatedRoute.data.subscribe(({\n        result\n      }) => {\n        if (result && result.assessment) {\n          this.readOnly = result.assessment.readOnly;\n          if (this.readOnly) {\n            this.assessmentForm.disable();\n          }\n        }\n        if (result?.assessment?.assessment) {\n          result.assessment.assessment.startDate = this.transformDate(result.assessment.assessment.startDate);\n          result.assessment.assessment.endDate = this.transformDate(result.assessment.assessment.endDate);\n          this.testers = result.testers;\n          this.assessmentForm.patchValue(result.assessment.assessment);\n        } else {\n          this.testers = result;\n        }\n      });\n      this.activatedRoute.params.subscribe(params => {\n        this.assetId = +params.assetId;\n        this.assessmentId = +params.assessmentId;\n        this.orgId = +params.orgId;\n      });\n    }\n    /**\n     * Function responsible to detect changes for the form and rebuild it\n     */\n    ngOnChanges() {\n      this.rebuildForm();\n    }\n    /**\n     * Function responsible for formatting the date data in the form for\n     * storage\n     * @param date is the date data from the form\n     * @returns formatted date to be stored\n     */\n    transformDate(date) {\n      return date.substring(0, 10);\n    }\n    /**\n     * Function responsible for rebuilding the reactive form in Angular\n     */\n    rebuildForm() {\n      this.assessmentForm.reset({\n        name: this.assessmentModel.name,\n        executiveSummary: this.assessmentModel.executiveSummary,\n        jiraId: this.assessmentModel.jiraId,\n        testUrl: this.assessmentModel.testUrl,\n        prodUrl: this.assessmentModel.prodUrl,\n        scope: this.assessmentModel.scope,\n        tag: this.assessmentModel.tag,\n        startDate: this.assessmentModel.startDate,\n        endDate: this.assessmentModel.endDate,\n        testers: this.assessmentModel.testers\n      });\n    }\n    /**\n     * Function responsible for creating the reactive form in Angular\n     */\n    createForm() {\n      this.assessmentForm = this.fb.group({\n        name: ['', [forms_1.Validators.required]],\n        executiveSummary: ['', forms_1.Validators.maxLength(4000)],\n        jiraId: ['', []],\n        testUrl: ['', [forms_1.Validators.required]],\n        prodUrl: ['', [forms_1.Validators.required]],\n        scope: ['', [forms_1.Validators.required]],\n        tag: ['', []],\n        startDate: ['', [forms_1.Validators.required]],\n        endDate: ['', [forms_1.Validators.required]],\n        testers: ['', [forms_1.Validators.required]]\n      });\n    }\n    /**\n     * Function responsible for handling the form submission and triggers a call\n     * to the createOrUpdateAssessment() function\n     */\n    onSubmit(assessment) {\n      this.assessmentModel = assessment.value;\n      this.createOrUpdateAssessment(this.assessmentModel);\n    }\n    /**\n     * Function responsible for handling the form data and creating or updating\n     * an Assessment\n     * @param assessment form object data passed from OnSubmit()\n     */\n    createOrUpdateAssessment(assessment) {\n      if (this.assessmentId) {\n        this.appService.updateAssessment(assessment, this.assessmentId, this.assetId).subscribe(res => {\n          this.navigateToAssessments();\n          this.alertService.success(res);\n        });\n      } else {\n        this.assessmentModel.asset = this.assetId;\n        this.appService.createAssessment(this.assessmentModel).subscribe(res => {\n          this.navigateToAssessments();\n          this.alertService.success(res);\n        });\n      }\n    }\n    /**\n     * Function responsible for navigating the user back to the Assessments View\n     */\n    navigateToAssessments() {\n      this.route.navigate([`organization/${this.orgId}/asset/${this.assetId}`]);\n    }\n    static #_ = this.ɵfac = function AssessmentFormComponent_Factory(t) {\n      return new (t || AssessmentFormComponent)(i0.ɵɵdirectiveInject(i1.AppService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssessmentFormComponent,\n      selectors: [[\"app-assessment-form\"]],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 39,\n      vars: 4,\n      consts: [[1, \"container-fluid\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\", \"col-6\", \"mx-auto\"], [\"for\", \"assessmentName\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"assessmentName\", 1, \"form-control\"], [\"for\", \"executiveSummary\"], [\"formControlName\", \"executiveSummary\", \"type\", \"text\", \"id\", \"executiveSummary\", \"maxlength\", \"4000\", \"rows\", \"6\", 1, \"form-control\"], [\"for\", \"jiraId\"], [\"formControlName\", \"jiraId\", \"type\", \"text\", \"id\", \"jiraId\", 1, \"form-control\"], [\"for\", \"testUrl\"], [\"formControlName\", \"testUrl\", \"type\", \"text\", \"id\", \"testUrl\", 1, \"form-control\"], [\"for\", \"prodUrl\"], [\"formControlName\", \"prodUrl\", \"type\", \"text\", \"id\", \"prodUrl\", 1, \"form-control\"], [\"for\", \"scope\"], [\"formControlName\", \"scope\", \"type\", \"text\", \"id\", \"scope\", 1, \"form-control\"], [\"for\", \"tag\"], [\"formControlName\", \"tag\", \"type\", \"text\", \"id\", \"tag\", 1, \"form-control\"], [\"for\", \"testers\"], [\"bindLabel\", \"firstName\", \"labelForId\", \"testerList\", \"clearAllText\", \"Clear\", \"formControlName\", \"testers\", 3, \"items\", \"multiple\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [\"for\", \"startDate\", 1, \"col-form-label\"], [\"formControlName\", \"startDate\", \"type\", \"date\", \"id\", \"startDate\", 1, \"form-control\"], [\"for\", \"endDate\", 1, \"col-form-label\"], [\"formControlName\", \"endDate\", \"type\", \"date\", \"id\", \"endDate\", 1, \"form-control\"], [\"class\", \"btn btn-primary float-right\", \"type\", \"submit\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Submit\", 3, \"disabled\", 4, \"ngIf\"], [\"type\", \"button\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Back to Assessments\", 1, \"btn\", \"btn-secondary\", \"float-right\", 2, \"margin-right\", \"5px\", 3, \"click\"], [1, \"ng-value-icon\", \"right\", 3, \"click\"], [\"type\", \"submit\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Submit\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"disabled\"]],\n      template: function AssessmentFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AssessmentFormComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit(ctx.assessmentForm);\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n          i0.ɵɵtext(4, \"Assessment Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 4);\n          i0.ɵɵelementStart(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Executive Summary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"textarea\", 6);\n          i0.ɵɵelementStart(9, \"label\", 7);\n          i0.ɵɵtext(10, \"JIRA URL\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵelementStart(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Test URL\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 10);\n          i0.ɵɵelementStart(15, \"label\", 11);\n          i0.ɵɵtext(16, \"Production URL\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵelementStart(18, \"label\", 13);\n          i0.ɵɵtext(19, \"Scope of the Assessment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"textarea\", 14);\n          i0.ɵɵelementStart(21, \"label\", 15);\n          i0.ɵɵtext(22, \"Source Code Tag\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 16);\n          i0.ɵɵelementStart(24, \"label\", 17);\n          i0.ɵɵtext(25, \"Testers\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"ng-select\", 18);\n          i0.ɵɵtemplate(27, AssessmentFormComponent_ng_template_27_Template, 3, 2, \"ng-template\", 19)(28, AssessmentFormComponent_ng_template_28_Template, 1, 2, \"ng-template\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"label\", 21);\n          i0.ɵɵtext(30, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(31, \"input\", 22);\n          i0.ɵɵelementStart(32, \"label\", 23);\n          i0.ɵɵtext(33, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"input\", 24)(35, \"br\");\n          i0.ɵɵtemplate(36, AssessmentFormComponent_button_36_Template, 2, 1, \"button\", 25);\n          i0.ɵɵelementStart(37, \"button\", 26);\n          i0.ɵɵlistener(\"click\", function AssessmentFormComponent_Template_button_click_37_listener() {\n            return ctx.navigateToAssessments();\n          });\n          i0.ɵɵtext(38, \" Back to Assessments \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.assessmentForm);\n          i0.ɵɵadvance(25);\n          i0.ɵɵproperty(\"items\", ctx.testers)(\"multiple\", true);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", !ctx.readOnly);\n        }\n      },\n      dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i6.NgSelectComponent, i6.NgOptionTemplateDirective, i6.NgLabelTemplateDirective]\n    });\n  }\n  return AssessmentFormComponent;\n})();\nexports.AssessmentFormComponent = AssessmentFormComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}