{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PasswordResetComponent = void 0;\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"@angular/router\");\nconst i2 = require(\"@angular/forms\");\nconst i3 = require(\"../auth.service\");\nconst i4 = require(\"../alert/alert.service\");\nconst i5 = require(\"primeng/inputtext\");\nconst i6 = require(\"primeng/card\");\nlet PasswordResetComponent = /*#__PURE__*/(() => {\n  class PasswordResetComponent {\n    constructor(activatedRoute, fb, authService, router, alertService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.alertService = alertService;\n      this.uuid = this.activatedRoute.snapshot.paramMap.get('uuid');\n      this.createForm();\n    }\n    ngOnInit() {}\n    createForm() {\n      this.pwdResetForm = this.fb.group({\n        password: ['', forms_1.Validators.required],\n        confirmPassword: ['', forms_1.Validators.required]\n      });\n    }\n    onSubmit(form) {\n      const pwdUpdateObj = {\n        password: form.value.password,\n        confirmPassword: form.value.confirmPassword,\n        uuid: this.uuid\n      };\n      this.authService.passwordReset(pwdUpdateObj).subscribe(res => {\n        this.alertService.success(res);\n        this.router.navigate(['login']);\n      });\n    }\n    static #_ = this.ɵfac = function PasswordResetComponent_Factory(t) {\n      return new (t || PasswordResetComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PasswordResetComponent,\n      selectors: [[\"app-password-reset\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"container\", \"col-12\", \"col-md-4\"], [\"id\", \"formContent\"], [3, \"ngSubmit\", \"formGroup\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"formControlName\", \"confirmPassword\", \"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"placeholder\", \"Confirm Password\", \"pInputText\", \"\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"type\", \"submit\", \"value\", \"Reset\", \"pInputText\", \"\", 1, \"btn\", \"btn-success\", \"float-right\", 3, \"disabled\"], [\"id\", \"formFooter\"], [\"href\", \"#/login\", 1, \"underlineHover\"]],\n      template: function PasswordResetComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-card\", 1)(2, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function PasswordResetComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit(ctx.pwdResetForm);\n          });\n          i0.ɵɵelement(3, \"input\", 3)(4, \"input\", 4)(5, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\")(8, \"a\", 7);\n          i0.ɵɵtext(9, \"Return to login\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.pwdResetForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.pwdResetForm.valid);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.InputText, i6.Card]\n    });\n  }\n  return PasswordResetComponent;\n})();\nexports.PasswordResetComponent = PasswordResetComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}