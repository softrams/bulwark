{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AdminGuard = void 0;\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"./global-manager.service\");\nconst i2 = require(\"@angular/router\");\nconst i3 = require(\"./auth.service\");\nlet AdminGuard = /*#__PURE__*/(() => {\n  class AdminGuard {\n    constructor(globalManager, router, authService) {\n      this.globalManager = globalManager;\n      this.router = router;\n      this.authService = authService;\n    }\n    canActivate(next, state) {\n      return this.checkLogin();\n    }\n    checkLogin() {\n      if (localStorage.getItem('AUTH_TOKEN')) {\n        this.globalManager.showLogin(true);\n        if (this.authService.isAdmin()) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        // Navigate to the login page with extras\n        this.router.navigate(['/login']);\n        this.globalManager.showLogin(false);\n        return false;\n      }\n    }\n    static #_ = this.ɵfac = function AdminGuard_Factory(t) {\n      return new (t || AdminGuard)(i0.ɵɵinject(i1.GlobalManagerService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AuthService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminGuard,\n      factory: AdminGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AdminGuard;\n})();\nexports.AdminGuard = AdminGuard;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}