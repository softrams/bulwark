{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TeamFormComponent = void 0;\nconst roles_enum_1 = require(\"../enums/roles.enum\");\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"@angular/forms\");\nconst i2 = require(\"../alert/alert.service\");\nconst i3 = require(\"../team.service\");\nconst i4 = require(\"../app.service\");\nconst i5 = require(\"@angular/router\");\nconst i6 = require(\"@angular/common\");\nconst i7 = require(\"@ng-select/ng-select\");\nconst i8 = require(\"primeng/inputtext\");\nconst i9 = require(\"primeng/card\");\nconst i10 = require(\"primeng/selectbutton\");\nconst i11 = require(\"primeng/listbox\");\nfunction TeamFormComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵlistener(\"click\", function TeamFormComponent_ng_template_13_Template_span_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const item_r4 = ctx_r2.item;\n      const clear_r5 = ctx_r2.clear;\n      return i0.ɵɵresetView(clear_r5(item_r4));\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.item;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r4.firstName, \" \", item_r4.lastName, \" \");\n  }\n}\nfunction TeamFormComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.item;\n    i0.ɵɵtextInterpolate2(\" \", item_r6.firstName, \" \", item_r6.lastName, \" \");\n  }\n}\nfunction TeamFormComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"p-listbox\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checkbox\", true)(\"filter\", true)(\"multiple\", true)(\"options\", ctx_r6.assets);\n  }\n}\nfunction TeamFormComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TeamFormComponent_div_28_div_1_Template, 2, 4, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const no_org_assets_r8 = i0.ɵɵreference(30);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.assets.length)(\"ngIfElse\", no_org_assets_r8);\n  }\n}\nfunction TeamFormComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"The selected organization has no active assets\");\n  }\n}\nlet TeamFormComponent = /*#__PURE__*/(() => {\n  class TeamFormComponent {\n    constructor(fb, alertService, teamService, appService, activatedRoute, route) {\n      this.fb = fb;\n      this.alertService = alertService;\n      this.teamService = teamService;\n      this.appService = appService;\n      this.activatedRoute = activatedRoute;\n      this.route = route;\n      this.isCreate = true;\n      this.createForm();\n    }\n    ngOnInit() {\n      this.activatedRoute.data.subscribe(({\n        result\n      }) => {\n        this.organizations = result.organizations;\n        this.activeUsers = result.activeUsers;\n        if (this.organizations && this.organizations.length) {\n          this.appService.getOrganizationAssets(this.organizations[0].id).then(assets => {\n            // tslint:disable-next-line: no-string-literal\n            this.teamForm.controls['organization'].setValue(this.organizations[0]);\n            this.assets = assets;\n          });\n        } else {\n          this.alertService.warn('Tester and Read-Only teams require an organization and no organizations exist in the system.');\n        }\n        this.activatedRoute.params.subscribe(param => {\n          if (param && param.teamId) {\n            this.isCreate = false;\n            this.teamId = param.teamId;\n            this.teamService.getTeamById(param.teamId).subscribe(team => {\n              const role = {\n                name: team.role\n              };\n              team.role = role;\n              this.teamForm.patchValue(team);\n              if (team.organization) {\n                this.appService.getOrganizationAssets(team.organization.id).then(assets => {\n                  this.assets = assets;\n                });\n              }\n            });\n          }\n        });\n      });\n      this.roles = [{\n        name: roles_enum_1.ROLE.READONLY\n      }, {\n        name: roles_enum_1.ROLE.TESTER\n      }, {\n        name: roles_enum_1.ROLE.ADMIN\n      }];\n    }\n    ngOnChanges() {\n      this.rebuildForm();\n    }\n    createForm() {\n      this.teamForm = this.fb.group({\n        name: ['', [forms_1.Validators.required]],\n        role: ['', [forms_1.Validators.required]],\n        users: [''],\n        assets: [''],\n        organization: ['']\n      });\n    }\n    rebuildForm() {\n      this.teamForm.reset({\n        name: this.teamModel.name,\n        role: this.teamModel.role,\n        users: this.teamModel.users,\n        assets: this.teamModel.assets,\n        organization: this.teamModel.organization\n      });\n    }\n    onSubmit(form) {\n      if (form.value.users) {\n        form.value.users = form.value.users.map(x => x.id);\n      }\n      if (form.value.assets) {\n        form.value.assets = form.value.assets.map(x => x.id);\n      }\n      const team = {\n        name: form.value.name,\n        organization: form.value.organization,\n        role: form.value.role.name,\n        users: form.value.users,\n        assetIds: form.value.assets\n      };\n      if (this.isCreate) {\n        this.teamService.createTeam(team).subscribe(res => {\n          this.teamForm.reset();\n          this.route.navigate([`administration`]);\n          this.alertService.success(res);\n        });\n      } else {\n        team.id = this.teamId;\n        this.teamService.updateTeam(team).subscribe(res => {\n          this.teamForm.reset();\n          this.route.navigate([`administration`]);\n          this.alertService.success(res);\n        });\n      }\n    }\n    navigateToAdministration() {\n      this.route.navigate([`administration`]);\n    }\n    fetchOrgAssets(event) {\n      const orgId = event.id;\n      this.appService.getOrganizationAssets(orgId).then(assets => {\n        this.assets = assets;\n      });\n    }\n    static #_ = this.ɵfac = function TeamFormComponent_Factory(t) {\n      return new (t || TeamFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.TeamService), i0.ɵɵdirectiveInject(i4.AppService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TeamFormComponent,\n      selectors: [[\"app-team-form\"]],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 37,\n      vars: 8,\n      consts: [[\"no_org_assets\", \"\"], [1, \"container\", \"col-6\", \"align-self-center\"], [\"id\", \"teamForm\", 3, \"ngSubmit\", \"formGroup\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"name\", \"name\", \"name\", 1, \"form-control\"], [1, \"form-row\"], [1, \"col-5\"], [\"bindLabel\", \"firstName\", \"labelForId\", \"testerList\", \"clearAllText\", \"Clear\", \"formControlName\", \"users\", 3, \"items\", \"multiple\"], [\"ng-label-tmp\", \"\"], [\"ng-option-tmp\", \"\"], [1, \"col-7\"], [\"name\", \"roles\", \"formControlName\", \"role\", \"optionLabel\", \"name\", 3, \"options\"], [1, \"col-6\"], [\"formControlName\", \"organization\", \"optionLabel\", \"name\", 3, \"click\", \"options\"], [4, \"ngIf\"], [\"type\", \"submit\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Submit\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"disabled\"], [\"type\", \"button\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Back to Administration\", 1, \"btn\", \"btn-secondary\", \"float-right\", 2, \"margin-right\", \"5px\", 3, \"click\"], [1, \"ng-value-icon\", \"right\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"formControlName\", \"assets\", \"optionLabel\", \"name\", 3, \"checkbox\", \"filter\", \"multiple\", \"options\"]],\n      template: function TeamFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"p-card\")(2, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function TeamFormComponent_Template_form_ngSubmit_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit(ctx.teamForm));\n          });\n          i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n          i0.ɵɵtext(5, \"Team Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"br\");\n          i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"label\");\n          i0.ɵɵtext(11, \"Active Users\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ng-select\", 6);\n          i0.ɵɵtemplate(13, TeamFormComponent_ng_template_13_Template, 3, 2, \"ng-template\", 7)(14, TeamFormComponent_ng_template_14_Template, 1, 2, \"ng-template\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\");\n          i0.ɵɵtext(17, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"p-selectButton\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(19, \"br\");\n          i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 11)(22, \"label\");\n          i0.ɵɵtext(23, \"Organization\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"p-listbox\", 12);\n          i0.ɵɵlistener(\"click\", function TeamFormComponent_Template_p_listbox_click_24_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.fetchOrgAssets(ctx.teamForm.controls[\"organization\"].value));\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\");\n          i0.ɵɵtext(27, \"Assets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, TeamFormComponent_div_28_Template, 2, 2, \"div\", 13)(29, TeamFormComponent_ng_template_29_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(31, \"br\");\n          i0.ɵɵelementStart(32, \"button\", 14);\n          i0.ɵɵtext(33);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function TeamFormComponent_Template_button_click_34_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.navigateToAdministration());\n          });\n          i0.ɵɵtext(35, \" Back to Administration \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(36, \"br\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.teamForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"items\", ctx.activeUsers)(\"multiple\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"options\", ctx.roles);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"options\", ctx.organizations);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.assets);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", !ctx.teamForm.valid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isCreate ? \"Create Team\" : \"Update Team\", \" \");\n        }\n      },\n      dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.NgSelectComponent, i7.NgOptionTemplateDirective, i7.NgLabelTemplateDirective, i8.InputText, i9.Card, i10.SelectButton, i11.Listbox]\n    });\n  }\n  return TeamFormComponent;\n})();\nexports.TeamFormComponent = TeamFormComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}