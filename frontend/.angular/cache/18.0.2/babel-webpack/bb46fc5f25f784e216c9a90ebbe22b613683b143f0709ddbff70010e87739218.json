{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserProfileComponent = void 0;\nconst forms_1 = require(\"@angular/forms\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"@angular/forms\");\nconst i2 = require(\"../auth.service\");\nconst i3 = require(\"@angular/router\");\nconst i4 = require(\"../alert/alert.service\");\nconst i5 = require(\"../user.service\");\nconst i6 = require(\"@angular/common\");\nconst i7 = require(\"primeng/table\");\nconst i8 = require(\"primeng/api\");\nconst i9 = require(\"primeng/inputtext\");\nconst i10 = require(\"primeng/card\");\nfunction UserProfileComponent_div_44_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"i\", 21);\n    i0.ɵɵelementStart(2, \"i\", 22);\n    i0.ɵɵtext(3, \" Please check your email at \");\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" to verify the address. To revoke this request, please click this \");\n    i0.ɵɵelementStart(7, \"a\", 39);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_div_44_span_5_Template_a_click_7_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.revokeUpdateEmailRequest());\n    });\n    i0.ɵɵtext(8, \"link\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.user == null ? null : ctx_r2.user.newEmail);\n  }\n}\nfunction UserProfileComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\", 36);\n    i0.ɵɵtext(2, \"Confirm New Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10);\n    i0.ɵɵelement(4, \"input\", 37);\n    i0.ɵɵtemplate(5, UserProfileComponent_div_44_span_5_Template, 9, 1, \"span\", 38);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.user.newEmail);\n  }\n}\nfunction UserProfileComponent_div_87_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementStart(10, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_div_87_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivateApiKey());\n    });\n    i0.ɵɵelement(11, \"i\", 41);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" ID: \", ctx_r2.userApiKeyInfo == null ? null : ctx_r2.userApiKeyInfo.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Created on \", i0.ɵɵpipeBind3(5, 3, ctx_r2.userApiKeyInfo == null ? null : ctx_r2.userApiKeyInfo.createdDate, \"longDate\", \"UTC\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Last used on \", i0.ɵɵpipeBind3(8, 7, ctx_r2.userApiKeyInfo == null ? null : ctx_r2.userApiKeyInfo.lastUpdatedDate, \"longDate\", \"UTC\"), \"\");\n  }\n}\nfunction UserProfileComponent_ng_template_88_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"An active API key does not exist.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserProfileComponent_ng_template_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"Role\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserProfileComponent_ng_template_102_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const team_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(team_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(team_r5.role);\n  }\n}\nlet UserProfileComponent = /*#__PURE__*/(() => {\n  class UserProfileComponent {\n    constructor(fb, authService, router, alertService, activatedRoute, userService) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.alertService = alertService;\n      this.activatedRoute = activatedRoute;\n      this.userService = userService;\n      this.isEdit = false;\n      this.isSecurityEdit = false;\n      this.isEmailEdit = false;\n      this.createForms();\n    }\n    ngOnInit() {\n      this.activatedRoute.data.subscribe(({\n        user\n      }) => {\n        this.user = user;\n        this.rebuildForm();\n        this.rebuildSecurityForm();\n        this.rebuildEmailForm();\n      });\n      this.getApiKey();\n    }\n    createForms() {\n      this.userForm = this.fb.group({\n        firstName: [{\n          value: '',\n          disabled: !this.isEdit\n        }, forms_1.Validators.required],\n        lastName: [{\n          value: '',\n          disabled: !this.isEdit\n        }, forms_1.Validators.required],\n        title: [{\n          value: '',\n          disabled: !this.isEdit\n        }, forms_1.Validators.required]\n      });\n      this.securityForm = this.fb.group({\n        oldPassword: [{\n          value: '',\n          disabled: !this.isSecurityEdit\n        }, forms_1.Validators.required],\n        newPassword: [{\n          value: '',\n          disabled: !this.isSecurityEdit\n        }, forms_1.Validators.required],\n        confirmNewPassword: [{\n          value: '',\n          disabled: !this.isSecurityEdit\n        }, forms_1.Validators.required]\n      });\n      this.emailForm = this.fb.group({\n        email: [{\n          value: '',\n          disabled: !this.isEmailEdit\n        }, [forms_1.Validators.required, forms_1.Validators.email]],\n        newEmail: [{\n          value: '',\n          disabled: !this.isEmailEdit\n        }, [forms_1.Validators.required, forms_1.Validators.email]]\n      });\n    }\n    rebuildForm() {\n      this.userForm.reset({\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        title: this.user.title\n      });\n    }\n    rebuildSecurityForm() {\n      this.securityForm.reset({\n        oldPassword: '',\n        newPassword: '',\n        confirmNewPassword: ''\n      });\n    }\n    rebuildEmailForm() {\n      this.emailForm.reset({\n        email: this.user.email,\n        newEmail: ''\n      });\n    }\n    onSubmit(form) {\n      if (!this.isEdit) {\n        this.isEdit = true;\n        this.userForm.enable();\n      } else {\n        const userInfo = {\n          firstName: form.value.firstName,\n          lastName: form.value.lastName,\n          title: form.value.title\n        };\n        this.userService.patchUser(userInfo).subscribe(res => {\n          this.alertService.success(res);\n          this.isEdit = false;\n          this.userForm.disable();\n        });\n      }\n    }\n    onSecuritySubmit(form) {\n      if (!this.isSecurityEdit) {\n        this.isSecurityEdit = true;\n        this.securityForm.enable();\n      } else {\n        this.authService.updatePassword(form.value.oldPassword, form.value.newPassword, form.value.confirmNewPassword).subscribe(res => {\n          this.alertService.success(res);\n          this.isSecurityEdit = false;\n          this.securityForm.disable();\n          this.securityForm.reset();\n        });\n      }\n    }\n    onEmailFormSubmit(form) {\n      if (!this.isEmailEdit) {\n        this.isEmailEdit = true;\n        this.emailForm.reset();\n        this.emailForm.enable();\n      } else {\n        this.authService.updateUserEmail(form.value.email, form.value.newEmail).subscribe(res => {\n          this.alertService.success(res);\n          this.isEmailEdit = false;\n          this.emailForm.disable();\n          this.rebuildEmailForm();\n        });\n      }\n    }\n    revokeUpdateEmailRequest() {\n      this.user.newEmail = '';\n      this.authService.revokeUserEmail().subscribe(res => {\n        this.alertService.success(res);\n        this.isEmailEdit = false;\n        this.emailForm.disable();\n        this.rebuildEmailForm();\n      });\n    }\n    generateApiKey() {\n      const confirmMessage = this.userApiKeyInfo ? 'Generating a new API key will deactivate the current API key. Do you want to continue?' : 'Are you sure you want to generate a new API key?';\n      const r = confirm(confirmMessage);\n      if (r) {\n        this.authService.generateApiKey().subscribe(res => {\n          this.alertService.success('API key successfully generated');\n          this.getApiKey();\n          alert(res);\n        });\n      }\n    }\n    getApiKey() {\n      this.authService.getApiKeyInfo().subscribe(res => {\n        this.userApiKeyInfo = res;\n      });\n    }\n    deactivateApiKey() {\n      const r = confirm('Are you sure you want to deactivate this API key?');\n      if (r) {\n        this.authService.deactivateApiKey(this.userApiKeyInfo.id).subscribe(res => {\n          this.alertService.success(res);\n          this.getApiKey();\n        });\n      }\n    }\n    static #_ = this.ɵfac = function UserProfileComponent_Factory(t) {\n      return new (t || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UserService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserProfileComponent,\n      selectors: [[\"app-user-profile\"]],\n      decls: 103,\n      vars: 13,\n      consts: [[\"noApiKey\", \"\"], [1, \"container\"], [1, \"col-md-9\", \"mx-auto\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-12\"], [\"id\", \"formContent\"], [\"id\", \"userForm\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\", \"row\"], [\"for\", \"firstName\", 1, \"col-4\", \"col-form-label\"], [1, \"col-8\"], [\"pInputText\", \"\", \"formControlName\", \"firstName\", \"type\", \"text\", \"id\", \"password\", \"name\", \"firstName\", \"placeholder\", \"First Name\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"for\", \"lastName\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"lastName\", \"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"placeholder\", \"Last Name\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"for\", \"title\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"title\", \"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"placeholder\", \"Title\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"pInputText\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"disabled\", \"value\"], [\"id\", \"emailForm\", 3, \"ngSubmit\", \"formGroup\"], [\"for\", \"email\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"class\", \"form-group row\", 4, \"ngIf\"], [1, \"pi\", \"pi-info-circle\"], [2, \"font-size\", \"smaller\"], [\"id\", \"securityFormContent\"], [\"id\", \"securityForm\", 3, \"ngSubmit\", \"formGroup\"], [\"for\", \"oldPassword\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"oldPassword\", \"type\", \"password\", \"id\", \"oldPassword\", \"name\", \"oldPassword\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"for\", \"newPassword\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"newPassword\", \"type\", \"password\", \"id\", \"newPassword\", \"name\", \"newPassword\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"for\", \"confirmNewPassword\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"confirmNewPassword\", \"type\", \"password\", \"id\", \"confirmNewPassword\", \"name\", \"confirmNewPassword\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [4, \"ngIf\", \"ngIfElse\"], [\"pInputText\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"click\"], [3, \"value\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"for\", \"newEmail\", 1, \"col-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"newEmail\", \"type\", \"email\", \"id\", \"newEmail\", \"name\", \"newEmail\", \"placeholder\", \"\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [4, \"ngIf\"], [3, \"click\", \"routerLink\"], [\"pInputText\", \"\", \"type\", \"button\", \"data-toggle\", \"tooltip\", \"data-placement\", \"bottom\", \"title\", \"Deactivate API Key\", 1, \"btn\", \"btn-warning\", \"float-left\", 3, \"click\"], [1, \"pi\", \"pi-trash\"]],\n      template: function UserProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"p-card\")(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\");\n          i0.ɵɵtext(7, \"Profile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"hr\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_Template_form_ngSubmit_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit(ctx.userForm));\n          });\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 8)(13, \"label\", 9);\n          i0.ɵɵtext(14, \"First Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 10);\n          i0.ɵɵelement(16, \"input\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 12);\n          i0.ɵɵtext(19, \"Last Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 10);\n          i0.ɵɵelement(21, \"input\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 14);\n          i0.ɵɵtext(24, \"Title:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 10);\n          i0.ɵɵelement(26, \"input\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(27, \"input\", 16);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(28, \"br\");\n          i0.ɵɵelementStart(29, \"p-card\")(30, \"div\", 3)(31, \"div\", 4)(32, \"div\", 5)(33, \"h4\");\n          i0.ɵɵtext(34, \"User Email Configuration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"hr\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"div\", 6)(37, \"form\", 17);\n          i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_Template_form_ngSubmit_37_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onEmailFormSubmit(ctx.emailForm));\n          });\n          i0.ɵɵelementStart(38, \"div\", 5)(39, \"div\", 8)(40, \"label\", 18);\n          i0.ɵɵtext(41, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"div\", 10);\n          i0.ɵɵelement(43, \"input\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(44, UserProfileComponent_div_44_Template, 6, 1, \"div\", 20);\n          i0.ɵɵelement(45, \"input\", 16);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(46, \"br\");\n          i0.ɵɵelementStart(47, \"p-card\")(48, \"div\", 3)(49, \"div\", 4)(50, \"div\", 5)(51, \"h4\");\n          i0.ɵɵtext(52, \"Security\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(53, \"i\", 21);\n          i0.ɵɵelementStart(54, \"i\", 22);\n          i0.ɵɵtext(55, \" Password Requirements: Must be at least 12 characters, at least one uppercase characters, at least one lowercase characters,at least one digit, and at least one symbol.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(56, \"hr\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(57, \"div\", 23)(58, \"form\", 24);\n          i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_Template_form_ngSubmit_58_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSecuritySubmit(ctx.securityForm));\n          });\n          i0.ɵɵelementStart(59, \"div\", 5)(60, \"div\", 8)(61, \"label\", 25);\n          i0.ɵɵtext(62, \"Current Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"div\", 10);\n          i0.ɵɵelement(64, \"input\", 26);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(65, \"div\", 8)(66, \"label\", 27);\n          i0.ɵɵtext(67, \"New Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(68, \"div\", 10);\n          i0.ɵɵelement(69, \"input\", 28);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(70, \"div\", 8)(71, \"label\", 29);\n          i0.ɵɵtext(72, \"Confirm New Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(73, \"div\", 10);\n          i0.ɵɵelement(74, \"input\", 30);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(75, \"input\", 16);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(76, \"br\");\n          i0.ɵɵelementStart(77, \"p-card\")(78, \"div\", 3)(79, \"div\", 4)(80, \"div\", 5)(81, \"h4\");\n          i0.ɵɵtext(82, \"Active API Key\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(83, \"i\", 21);\n          i0.ɵɵelementStart(84, \"i\", 22);\n          i0.ɵɵtext(85, \" A generated API key can be used in place of traditional username/password authentication, allowing for all actions against Bulwark that the user is authorized for.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(86, \"hr\");\n          i0.ɵɵtemplate(87, UserProfileComponent_div_87_Template, 12, 11, \"div\", 31)(88, UserProfileComponent_ng_template_88_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(90, \"button\", 32);\n          i0.ɵɵlistener(\"click\", function UserProfileComponent_Template_button_click_90_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.generateApiKey());\n          });\n          i0.ɵɵtext(91, \" Generate API Key \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(92, \"br\");\n          i0.ɵɵelementStart(93, \"p-card\")(94, \"div\", 3)(95, \"div\", 4)(96, \"div\", 5)(97, \"h4\");\n          i0.ɵɵtext(98, \"Teams\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(99, \"hr\");\n          i0.ɵɵelementStart(100, \"p-table\", 33);\n          i0.ɵɵtemplate(101, UserProfileComponent_ng_template_101_Template, 5, 0, \"ng-template\", 34)(102, UserProfileComponent_ng_template_102_Template, 5, 2, \"ng-template\", 35);\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          const noApiKey_r6 = i0.ɵɵreference(89);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"disabled\", ctx.isEdit ? !ctx.userForm.valid : false)(\"value\", ctx.isEdit ? \"Update\" : \"Edit\");\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"formGroup\", ctx.emailForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEmailEdit);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isEmailEdit ? !ctx.emailForm.valid || ctx.user.newEmail : false)(\"value\", ctx.isEmailEdit ? \"Update\" : \"Edit\");\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"formGroup\", ctx.securityForm);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"disabled\", ctx.isSecurityEdit ? !ctx.securityForm.valid : false)(\"value\", ctx.isSecurityEdit ? \"Update\" : \"Edit\");\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngIf\", ctx.userApiKeyInfo)(\"ngIfElse\", noApiKey_r6);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"value\", ctx.user.teams);\n        }\n      },\n      dependencies: [i6.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.Table, i8.PrimeTemplate, i9.InputText, i10.Card, i6.DatePipe]\n    });\n  }\n  return UserProfileComponent;\n})();\nexports.UserProfileComponent = UserProfileComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}