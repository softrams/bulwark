{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SettingsComponent = void 0;\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"@angular/forms\");\nconst i2 = require(\"../../auth.service\");\nconst i3 = require(\"@angular/router\");\nconst i4 = require(\"../../alert/alert.service\");\nconst i5 = require(\"../../user.service\");\nconst i6 = require(\"../../app.service\");\nconst i7 = require(\"primeng/inputtext\");\nconst i8 = require(\"primeng/card\");\nlet SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor(fb, authService, router, alertService, activatedRoute, userService, appService) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.alertService = alertService;\n      this.activatedRoute = activatedRoute;\n      this.userService = userService;\n      this.appService = appService;\n      this.isEdit = false;\n      this.keyPlaceholder = '************************';\n    }\n    ngOnInit() {\n      this.activatedRoute.data.subscribe(({\n        settings\n      }) => {\n        this.createForm();\n        this.settings = settings;\n        this.rebuildForm();\n      });\n    }\n    createForm() {\n      this.settingsForm = this.fb.group({\n        fromEmail: [{\n          value: '',\n          disabled: !this.isEdit\n        }],\n        fromEmailPassword: [{\n          value: '',\n          disabled: !this.isEdit\n        }],\n        companyName: [{\n          value: '',\n          disabled: !this.isEdit\n        }]\n      });\n    }\n    rebuildForm() {\n      this.settingsForm.reset({\n        fromEmail: this.settings?.fromEmail,\n        fromEmailPassword: this.settings?.fromEmailPassword,\n        companyName: this.settings?.companyName\n      });\n    }\n    onSubmit(form) {\n      if (!this.isEdit) {\n        this.isEdit = true;\n        this.settingsForm.enable();\n      } else {\n        const settingsInfo = form.value;\n        this.appService.updateConfig(settingsInfo).subscribe(res => {\n          this.alertService.success(res);\n          this.isEdit = false;\n          this.settingsForm.disable();\n        });\n      }\n    }\n    static #_ = this.ɵfac = function SettingsComponent_Factory(t) {\n      return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UserService), i0.ɵɵdirectiveInject(i6.AppService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SettingsComponent,\n      selectors: [[\"app-settings\"]],\n      decls: 34,\n      vars: 4,\n      consts: [[1, \"card-body\"], [\"id\", \"formContent\"], [\"id\", \"userForm\", 3, \"ngSubmit\", \"formGroup\"], [1, \"col-12\"], [1, \"p-d-flex\", \"p-flex-column\"], [1, \"pi\", \"pi-info-circle\"], [2, \"font-size\", \"smaller\"], [\"href\", \"https://support.google.com/mail/answer/185833?hl=en-GB\"], [1, \"p-d-flex\", \"p-flex-column\", \"p-flex-md-row\"], [\"for\", \"fromEmail\", 1, \"col-12\", \"col-md-4\", \"col-form-label\"], [1, \"col-12\", \"col-md-8\"], [\"pInputText\", \"\", \"formControlName\", \"fromEmail\", \"type\", \"text\", \"id\", \"fromEmail\", \"name\", \"fromEmail\", \"placeholder\", \"Email\", \"pInputText\", \"\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"for\", \"fromEmailPassword\", 1, \"col-12\", \"col-md-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"fromEmailPassword\", \"type\", \"password\", \"id\", \"fromEmailPassword\", \"name\", \"fromEmailPassword\", \"pInputText\", \"\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\", 3, \"placeholder\"], [\"for\", \"companyName\", 1, \"col-12\", \"col-md-4\", \"col-form-label\"], [\"pInputText\", \"\", \"formControlName\", \"companyName\", \"type\", \"text\", \"id\", \"companyName\", \"name\", \"companyName\", \"placeholder\", \"Company Name\", \"pInputText\", \"\", 1, \"form-control\", 2, \"margin-bottom\", \"5px\"], [\"pInputText\", \"\", \"type\", \"submit\", \"pInputText\", \"\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"disabled\", \"value\"]],\n      template: function SettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-card\")(1, \"div\", 0)(2, \"h4\");\n          i0.ɵɵtext(3, \"Application Email Settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"hr\");\n          i0.ɵɵelementStart(5, \"div\", 1)(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit(ctx.settingsForm);\n          });\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 4)(10, \"span\");\n          i0.ɵɵelement(11, \"i\", 5);\n          i0.ɵɵelementStart(12, \"i\", 6);\n          i0.ɵɵtext(13, \" An app password is a 16-digit passcode that gives a non-Google app or device permission to access your Google Account. Please follow this \");\n          i0.ɵɵelementStart(14, \"a\", 7);\n          i0.ɵɵtext(15, \"link\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(16, \" for more information.\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 9);\n          i0.ɵɵtext(19, \"Gmail Account:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 10);\n          i0.ɵɵelement(21, \"input\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 12);\n          i0.ɵɵtext(24, \"Gmail App Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 10);\n          i0.ɵɵelement(26, \"input\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(27, \"div\", 8)(28, \"label\", 14);\n          i0.ɵɵtext(29, \"Company Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 10);\n          i0.ɵɵelement(31, \"input\", 15);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(32, \"input\", 16)(33, \"br\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n          i0.ɵɵadvance(20);\n          i0.ɵɵproperty(\"placeholder\", ctx.isEdit ? \"\" : ctx.keyPlaceholder);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.isEdit ? !ctx.settingsForm.valid : false)(\"value\", ctx.isEdit ? \"Update\" : \"Edit\");\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.InputText, i8.Card],\n      styles: [\".centerBtn[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:40px;width:75px;border:3px solid green}\"]\n    });\n  }\n  return SettingsComponent;\n})();\nexports.SettingsComponent = SettingsComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}